version: '3.4'

x-osserver:
  &default-osserver
  image: openslides/openslides-server:latest
  networks:
    - front
    - back
x-osserver-env: &default-osserver-env
    DEFAULT_FROM_EMAIL: "noreply@example.com"
    REDIS_REPLICAS: 3 # must match redis-slave replicas below!
    INSTANCE_DOMAIN: "http://example.com:8000"
    SERVER_IS_SECONDARY: # unset
x-pgnode: &default-pgnode
  image: openslides/openslides-repmgr:latest
  build: ./repmgr
  networks:
    - dbnet
  labels:
    org.openslides.role: "postgres"
  deploy:
    replicas: 1
x-pgnode-env: &default-pgnode-env
  REPMGR_RECONNECT_ATTEMPTS: 30
  REPMGR_RECONNECT_INTERVAL: 10

services:
  prioserver:
    # This service is the main server service in that it is responsible for
    # database migrations, adding the initial user credentials etc.  However,
    # the direct access to this service's resources is only granted to select,
    # prioritized OpenSlides users or groups.  The general workload is handled
    # by the regular "server" service below.
    << : *default-osserver
    environment:
      << : *default-osserver-env
    secrets:
      - os_admin
      - os_user
    command: "gunicorn -w 1 --preload -b 0.0.0.0:8000
      -k uvicorn.workers.UvicornWorker openslides.asgi:application"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
  server:
    << : *default-osserver
    # Below is the default command.  You can uncomment it to override the
    # number of workers, for example:
    # command: "gunicorn -w 8 --preload -b 0.0.0.0:8000
    #   -k uvicorn.workers.UvicornWorker openslides.asgi:application"
    #
    # Uncomment the following line to use daphne instead of gunicorn:
    # command: "daphne -b 0.0.0.0 -p 8000 openslides.asgi:application"
    environment:
      << : *default-osserver-env
      # With this variable set this service will not attempt to prepare the
      # instance by, e.g., running migations.  This is exclusively left up to
      # the main service to avoid conflicts.
      SERVER_IS_SECONDARY: 1
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  client:
    image: openslides/openslides-client:latest
    networks:
      - front
    ports:
      - "0.0.0.0:61000:80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s

  pgnode1:
    << : *default-pgnode
    environment:
      << : *default-pgnode-env
      REPMGR_NODE_ID: 1
      REPMGR_PRIMARY:  # This *is* the primary
    deploy:
      placement:
        constraints: [node.labels.openslides-db == dbnode1]
    volumes:
      - "dbdata1:/var/lib/postgresql"
  # pgnode2:
  #   << : *default-pgnode
  #   environment:
  #     << : *default-pgnode-env
  #     REPMGR_NODE_ID: 2
  #     REPMGR_PRIMARY: pgnode1
  #   deploy:
  #     placement:
  #       constraints: [node.labels.openslides-db == dbnode2]
  #   volumes:
  #     - "dbdata2:/var/lib/postgresql"
  # pgnode3:
  #   << : *default-pgnode
  #   environment:
  #     << : *default-pgnode-env
  #     REPMGR_NODE_ID: 3
  #     REPMGR_PRIMARY: pgnode1
  #   deploy:
  #     placement:
  #       constraints: [node.labels.openslides-db == dbnode3]
  #   volumes:
  #     - "dbdata3:/var/lib/postgresql"

  pgbouncer:
    # environment:
    #   - PG_NODE_LIST=pgnode1,pgnode2,pgnode3
    image: openslides/openslides-pgbouncer:latest
    build: ./pgbouncer
    networks:
      back:
        aliases:
          - db
          - postgres
      dbnet:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
      placement:
        constraints: [node.role == manager]
  postfix:
    image: openslides/openslides-postfix:latest
    build: ./postfix
    environment:
      MYHOSTNAME: localhost
      RELAYHOST: localhost
    networks:
      - back
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
      replicas: 1
      placement:
        constraints: [node.role == manager]
  redis:
    image: redis:alpine
    networks:
      back:
        aliases:
          - rediscache
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
  redis-slave:
    image: redis:alpine
    command: ["redis-server", "--save", "", "--slaveof", "redis", "6379"]
    networks:
      back:
        aliases:
          - rediscache-slave
    deploy:
      replicas: 3 # must match REDIS_REPLICAS above!
      restart_policy:
        condition: on-failure
        delay: 5s
  redis-channels:
    image: redis:alpine
    networks:
      back:
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
  media:
    image: openslides/openslides-media-service:latest
    build: https://github.com/OpenSlides/openslides-media-service.git
    environment:
      - CHECK_REQUEST_URL=server:8000/check-media/
    deploy:
      replicas: 8
      restart_policy:
        condition: on-failure
        delay: 10s
    networks:
      front:
      back:
    # Override command to run more workers per task
    # command: ["gunicorn", "-w", "4", "--preload", "-b",
    #   "0.0.0.0:8000", "src.mediaserver:app"]

volumes:
  dbdata1:
  dbdata2:
  dbdata3:

networks:
  front:
  back:
    driver_opts:
      encrypted: ""
  dbnet:
    driver_opts:
      encrypted: ""

secrets:
  os_admin:
    file: ./secrets/adminsecret.env
  os_user:
    file: ./secrets/usersecret.env

# vim: set ft=yaml sw=2 et:
