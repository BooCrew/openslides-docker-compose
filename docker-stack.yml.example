version: '3.4'
services:
  prioserver:
    # This service is the main server service in that it is responsible for
    # database migrations, adding the initial user credentials etc.  However,
    # the direct access to this service's resources is only granted to select,
    # prioritized OpenSlides users or groups.  The general workload is handled
    # by the regular "server" service below.
    # It will share all the same resources (DB, Redis, static files)
    # as the regular server, so it is crucial that it is always kept at
    # compatible versions.
    image: openslides/openslides:latest
    secrets:
      - os_admin
      - os_user
    command: "gunicorn -w 1 --preload -b 0.0.0.0:8000
      -k uvicorn.workers.UvicornWorker openslides.asgi:application"
    volumes:
      - type: volume
        source: "staticfiles"
        target: "/app/openslides/static"
        volume:
          nocopy: true
    depends_on:
      - postfix
      - pgbouncer
      - redis
      - redis-slave
    networks:
      - front
      - back
    # environment:
    #  - INSTANCE_IS_READONLY=1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
  server:
    image: openslides/openslides:latest
    # Below is the default command.  You can uncomment it to override the
    # number of workers, for example:
    # command: "gunicorn -w 8 --preload -b 0.0.0.0:8000
    #   -k uvicorn.workers.UvicornWorker openslides.asgi:application"
    #
    # Uncomment the following line to use daphne instead of gunicorn:
    # command: "daphne -b 0.0.0.0 -p 8000 openslides.asgi:application"
    depends_on:
      - prioserver
      - pgbouncer
      - redis
      - redis-slave
    networks:
      - front
      - back
    environment:
      # With this variable set this service will not attempt to prepare the
      # instance by, e.g., running migations.  This is exclusively left up to
      # the main service to avoid conflicts.
      - SERVER_IS_SECONDARY=1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
  client:
    image: openslides/openslides-proxy:latest
    build: ./client
    volumes:
      - type: volume
        source: "staticfiles"
        target: "/usr/share/nginx/html"
        volume:
          nocopy: true
    depends_on:
      - prioserver
    networks:
      - front
    ports:
      - "0.0.0.0:61000:80"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
  pgnode1:
    environment:
      - REPMGR_NODE_ID=1
      - REPMGR_PRIMARY= # This *is* the primary
      - REPMGR_RECONNECT_ATTEMPTS=30
      - REPMGR_RECONNECT_INTERVAL=10
    image: openslides/openslides-repmgr:latest
    build: ./repmgr
    networks:
      - back
    volumes:
      - "dbdata1:/var/lib/postgresql"
    deploy:
      replicas: 1
      placement:
        constraints: [node.labels.openslides-db == master]
    labels:
      org.openslides.role: "postgres"
  # pgnode2:
  #   environment:
  #     - REPMGR_NODE_ID=2
  #     - REPMGR_PRIMARY=pgnode1
  #     - REPMGR_RECONNECT_ATTEMPTS=30
  #     - REPMGR_RECONNECT_INTERVAL=10
  #   image: openslides/openslides-repmgr:latest
  #   networks:
  #     - back
  #   volumes:
  #     - "dbdata2:/var/lib/postgresql"
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints: [node.labels.openslides-db == standby1]
  #   labels:
  #     org.openslides.role: "postgres"
  # pgnode3:
  #   environment:
  #     - REPMGR_NODE_ID=3
  #     - REPMGR_PRIMARY=pgnode1
  #     - REPMGR_RECONNECT_ATTEMPTS=30
  #     - REPMGR_RECONNECT_INTERVAL=10
  #   image: openslides/openslides-repmgr:latest
  #   networks:
  #     - back
  #   volumes:
  #     - "dbdata3:/var/lib/postgresql"
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #     replicas: 1
  #     placement:
  #       constraints: [node.labels.openslides-db == standby2]
  #   labels:
  #     org.openslides.role: "postgres"
  pgbouncer:
    # environment:
    #   - PG_NODE_LIST=pgnode1,pgnode2,pgnode3
    image: openslides/openslides-pgbouncer:latest
    build: ./pgbouncer
    networks:
      back:
        aliases:
          - db
          - postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
      placement:
        constraints: [node.role == manager]
  postfix:
    image: openslides/openslides-postfix:latest
    build: ./postfix
    environment:
      - MYHOSTNAME=localhost
      - RELAYHOST=localhost
    networks:
      - back
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
      replicas: 1
      placement:
        constraints: [node.role == manager]
  redis:
    image: redis:alpine
    networks:
      back:
        aliases:
          - rediscache
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
  redis-slave:
    image: redis:alpine
    command: ["redis-server", "--save", "", "--slaveof", "redis", "6379"]
    networks:
      back:
        aliases:
          - rediscache-slave
  mediaserver:
    image: openslides/openslides-mediafileserver:latest
    build: https://github.com/OpenSlides/openslides-media-service.git
    environment:
      - CHECK_REQUEST_URL=server:8000/check-media/
    deploy:
      replicas: 25
      restart_policy:
        condition: on-failure
    networks:
      front:
      back:
volumes:
  dbdata1:
  dbdata2:
  dbdata3:
  staticfiles:
networks:
  front:
  back:
    driver_opts:
      encrypted: ""
secrets:
  os_admin:
    file: ./secrets/adminsecret.env
  os_user:
    file: ./secrets/usersecret.env

# vim: set ft=yaml sw=2 et:
